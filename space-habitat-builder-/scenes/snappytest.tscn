[gd_scene load_steps=6 format=3 uid="uid://8tggcmkshkfj"]

[ext_resource type="PackedScene" uid="uid://c5cpdrfulu5f8" path="res://scenes/snap.tscn" id="1_uubix"]

[sub_resource type="GDScript" id="GDScript_uubix"]
script/source = "extends Node3D

@onready var boxtest: Node3D = $\".\"
@onready var snap: Area3D = $snap
var snap_nodes: Array[Node] = []
var current_snap_index: int = 0
var obj2: Array[Node] = []
var S_I2: int = 0
var flag1: bool = 0
var flag2: bool = 0

signal success

# Called when the node enters the scene tree for the first time.
func _ready() -> void:
	for node in get_tree().get_nodes_in_group(\"snap\"):
		if node.get_parent() == self and node is Area3D:
			snap_nodes.append(node)
		
	 # Replace with function body.
func _unhandled_input(event: InputEvent) -> void:
	if event is InputEventMouseButton and flag1:
		if event.button_index == MOUSE_BUTTON_WHEEL_UP and event.pressed:
			if not snap_nodes.is_empty():
				current_snap_index = (current_snap_index + 1) % snap_nodes.size()
				print(\"Selected snap node:\", snap_nodes[current_snap_index])
			elif event.button_index == MOUSE_BUTTON_WHEEL_DOWN and event.pressed:
				if not snap_nodes.is_empty():
					current_snap_index = (current_snap_index - 1) % snap_nodes.size()
					print(\"Selected snap node:\", snap_nodes[current_snap_index])
	if event is InputEventMouseButton and Input.is_action_pressed(\"rotate\"):
		if event.button_index == MOUSE_BUTTON_WHEEL_UP and event.pressed:
			if not obj2.is_empty():
				S_I2 = (S_I2 + 1) % obj2.size()
				print(\"Selected 2 snap node:\", obj2[S_I2])
			elif event.button_index == MOUSE_BUTTON_WHEEL_DOWN and event.pressed:
				if not obj2.is_empty():
					S_I2 = (S_I2 - 1) % obj2.size()
					print(\"Selected snap node:\", obj2[S_I2])
					

# Called every frame. 'delta' is the elapsed time since the previous frame.
func _process(delta: float) -> void:
	pass
func shame(obj: Node3D, temp):
	#print(\"Shaming\", obj, \"onto\", self, \"using snap\", snap_nodes[current_snap_index] if not snap_nodes.is_empty() else null)
	flag1 = 1
	
	var obj_snap = obj.get_node_or_null(\"snap\")
	for node in get_tree().get_nodes_in_group(\"snap\"):
		if node.get_parent() == obj and node is Area3D:
			obj2.append(node)
	if obj2.is_empty():
		print(\"Error: No snap nodes found in 'snap' group on\", obj)
		return
	#var temp = obj.global_transform
	
	var sticky = snap_nodes[current_snap_index]
	var target_transform = sticky.global_transform
	obj.global_transform = target_transform * obj2[S_I2].transform.affine_inverse()
	var P = sticky.global_position
	var R = Basis.from_euler(Vector3(PI, 0, 0))
	obj.global_position = P + R * (obj.global_position - P)
	obj.global_transform.basis = R * obj.global_transform.basis
	if Input.is_action_just_pressed(\"Lclick\"):
		flag1 = 0
		obj2.clear()
		S_I2 = 0
		emit_signal(\"success\")
	elif Input.is_action_pressed(\"ESC\"):
		print(\"esc\")
		obj.global_transform = temp
		emit_signal(\"success\")
"

[sub_resource type="BoxMesh" id="BoxMesh_85csv"]
size = Vector3(10, 10, 10)

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_uubix"]
albedo_color = Color(0.49998897, 0.38225612, 0.04028101, 1)

[sub_resource type="BoxShape3D" id="BoxShape3D_83adf"]

[node name="boxtest" type="Node3D" groups=["BBox"]]
script = SubResource("GDScript_uubix")

[node name="MeshInstance3D" type="MeshInstance3D" parent="."]
mesh = SubResource("BoxMesh_85csv")
surface_material_override/0 = SubResource("StandardMaterial3D_uubix")

[node name="snap" parent="." instance=ExtResource("1_uubix")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 6.25, 0)

[node name="snap2" parent="." instance=ExtResource("1_uubix")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 5.6280494, 1.6829567, 0)

[node name="Area3D" type="Area3D" parent="."]

[node name="CollisionShape3D" type="CollisionShape3D" parent="Area3D"]
transform = Transform3D(10, 0, 0, 0, 10, 0, 0, 0, 10, 0, 0.0726099, 0)
shape = SubResource("BoxShape3D_83adf")
